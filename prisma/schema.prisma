generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  name           String
  email          String      @unique
  password       String
  role           Role        @default(user)
  photo          String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  pencarian      Pencarian[]
  resepDisetujui Resep[]     @relation("ResepDisetujuiAdmin")
  resepDiunggah  Resep[]     @relation("UserUploadResep")
}

model Resep {
  id              Int                @id @default(autoincrement())
  nama            String
  photoResep      String?
  kategoriId      Int
  tanggalUnggahan DateTime           @default(now())
  userId          Int
  isApproved      Boolean            @default(false)
  tanggalAcc      DateTime?
  disetujuiOleh   Int?
  bahanList       Bahan[]
  hasilPencarian  HasilPencarian[]
  langkahList     LangkahPembuatan[]
  admin           User?              @relation("ResepDisetujuiAdmin", fields: [disetujuiOleh], references: [id])
  kategori        Kategori           @relation(fields: [kategoriId], references: [id])
  user            User               @relation("UserUploadResep", fields: [userId], references: [id])
}

model Kategori {
  id    Int     @id @default(autoincrement())
  nama  String
  resep Resep[]
}

model Bahan {
  id      Int    @id @default(autoincrement())
  resepId Int
  nama    String
  jumlah  String
  resep   Resep  @relation(fields: [resepId], references: [id], onDelete: Cascade)
}

model LangkahPembuatan {
  id        Int    @id @default(autoincrement())
  resepId   Int
  urutan    Int
  deskripsi String
  resep     Resep  @relation(fields: [resepId], references: [id], onDelete: Cascade)
}

model Pencarian {
  id               Int              @id @default(autoincrement())
  userId           Int
  kataKunci        String
  tanggalPencarian DateTime         @default(now())
  hasilPencarian   HasilPencarian[]
  user             User             @relation(fields: [userId], references: [id])
}

model HasilPencarian {
  id          Int       @id @default(autoincrement())
  pencarianId Int
  resepId     Int
  pencarian   Pencarian @relation(fields: [pencarianId], references: [id])
  resep       Resep     @relation(fields: [resepId], references: [id])
}

enum Role {
  admin
  user
}
